name: PHP Composer

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-24.04
    if: "startsWith(github.event.head_commit.message, 'version')"

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP version
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4

    - name: Install Composer dependencies
      run: composer install

    - name: Install NPM dependencies
      run: |
          chmod +x ./builder.sh
          ./builder.sh -t npm
          
    - name: Compile static files
      run: |
          sudo ln -s "$(which node)" /usr/bin/node
          ./builder.sh -t build
      
    - name: Build a package
      run: ./builder.sh -t pack
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}

    - name: Upload main package
      run: ./builder.sh -t upload
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

    - name: PLESK - Set permission for package builder
      run: chmod +x ./builder-plesk.sh
          
    - name: PLESK - Compile static files 
      run: ./builder-plesk.sh -t build
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}
        PLESK_PRODUCT_TITLE: "WebMail Lite"
        PLESK_PRODUCT_FULLTITLE: "Afterlogic WebMail Lite"
        PLESK_PRODUCT_WEBSITE: "https://afterlogic.org/webmail-lite"
        PLESK_PRODUCT_DOWNLOAD: "https://afterlogic.org/download/webmail-lite-php"

    - name: PLESK - Generate changelog
      run: ./builder-plesk.sh -t log
      
    - name: PLESK - Build a package
      run: ./builder-plesk.sh -t zip
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}

    - name: PLESK - Upload plesk package
      run: ./builder-plesk.sh -t upload
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

    - name: DEMO - prepare demo package
      run: ./builder.sh -t prepare-demo
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

    - name: DEMO - build demo static files
      run: ./builder.sh -t build
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}

    - name: DEMO - build demo package
      run: ./builder.sh -t pack
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}

    - name: DEMO - upload demo package
      run: ./builder.sh -t upload-demo
      env:
        PRODUCT_NAME: ${{ secrets.PRODUCT_NAME }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
